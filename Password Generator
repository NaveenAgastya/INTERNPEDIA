import secrets
import string
import pyperclip  

def generate_password(length, uppercase, lowercase, digits, symbols):
    """
    Generate a random password based on specified parameters.

    Parameters:
    - length: int, length of the password.
    - uppercase: bool, include uppercase letters.
    - lowercase: bool, include lowercase letters.
    - digits: bool, include digits.
    - symbols: bool, include symbols.

    Returns:
    - str, generated password.
    """
    character_set = ""

    if uppercase:
        character_set += string.ascii_uppercase
    if lowercase:
        character_set += string.ascii_lowercase
    if digits:
        character_set += string.digits
    if symbols:
        character_set += string.punctuation

    if not character_set:
        raise ValueError("At least one character set (uppercase, lowercase, digits, symbols) must be selected.")

    password = ''.join(secrets.choice(character_set) for i in range(length))
    return password

def password_generator():
    print("Welcome to the Password Generator!")

    while True:
        try:
            length = int(input("Enter the desired length of the password: "))
            uppercase = input("Include uppercase letters? (Y/N): ") == 'Y'
            lowercase = input("Include lowercase letters? (Y/N): ") == 'Y'
            digits = input("Include digits? (Y/N): ") == 'Y'
            symbols = input("Include symbols? (Y/N): ") == 'Y'

            password = generate_password(length, uppercase, lowercase, digits, symbols)

            print(f"\nGenerated Password: {password}")

            copy_to_clipboard = input("Do you want to copy the password to clipboard? (yes/no): ").lower()
            if copy_to_clipboard == 'yes':
                pyperclip.copy(password)
                print("Password copied to clipboard.")

        except ValueError as e:
            print(f"Error: {e}")
        except Exception as e:
            print(f"Error: {e}")

        generate_again = input("Do you want to generate another password? (Y/N): ")
        if generate_again == 'Y':
            continue
        else:
            break

    print("Thank you for using the Password Generator")

# Run the password generator
password_generator()
